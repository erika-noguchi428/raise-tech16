<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.StudentManagement.repository.StudentRepository">

  <!-- 受講生の全件検索 -->
  <select id="search" resultType="raisetech.StudentManagement.data.Student">
    SELECT *
    FROM students
  </select>

  <!-- 受講生のコース情報の全件検索 -->
  <select id="searchStudentsCoursesList"
    resultType="raisetech.StudentManagement.data.StudentCourse">
    SELECT *
    FROM students_courses
  </select>

  <!-- 受講生コース申し込み情報の全件検索 -->
  <select id="searchStudentStatusList" resultType="raisetech.StudentManagement.data.StudentStatus">
    SELECT *
    FROM courses_status
  </select>

  <!-- 受講生の検索 -->
  <select id="searchStudent" resultType="raisetech.StudentManagement.data.Student">
    SELECT *
    FROM students
    WHERE id = #{student_id}
  </select>

  <!-- 受講生IDに紐づく受講生コース情報の検索 -->
  <select id="searchStudentCourse" resultType="raisetech.StudentManagement.data.StudentCourse">
    SELECT *
    FROM students_courses
    WHERE student_id = #{studentId}
  </select>

  <!-- 受講生コース情報IDに紐づく受講生コース申し込み情報の検索 -->
  <select id="searchStudentStatus" resultType="raisetech.StudentManagement.data.StudentStatus">
    SELECT *
    FROM courses_status
    WHERE course_id = #{courseId}
  </select>

  <!-- 受講生の条件を指定した検索 -->
  <select id="searchStudentCondition" resultType="raisetech.StudentManagement.data.Student">
    SELECT *
    FROM students
    <where>
      <if test="studentName != null">
        AND student_name LIKE CONCAT ('%',#{studentName},'%')
      </if>

      <if test="studentNameFurigana != null">
        AND student_name_furigana LIKE CONCAT ('%',#{studentNameFurigana},'%')
      </if>

      <if test="nickname != null">
        AND nickname LIKE CONCAT ('%',#{nickname},'%')
      </if>

      <if test="email != null">
        AND email LIKE CONCAT ('%',#{email},'%')
      </if>

      <if test="address != null">
        AND address LIKE CONCAT ('%',#{address},'%')
      </if>

      <if test="age != null">
        AND age = #{age}
      </if>

      <if test="gender != null">
        AND gender = #{gender}
      </if>

    </where>
  </select>

  <!-- 受講生の新規登録 -->
  <insert id="registerStudent" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students (
    student_name, student_name_furigana, nickname, email, address, age, gender, remark, isDeleted
    ) VALUES (
    #{studentName}, #{studentNameFurigana}, #{nickname}, #{email}, #{address}, #{age}, #{gender},
    #{remark}, false
    )
  </insert>

  <!-- 受講生コース情報の新規登録 -->
  <insert id="registerStudentCourse" useGeneratedKeys="true" keyProperty="courseId">
    INSERT INTO students_courses (
    course_id, student_id, course_name, start_date, end_date
    ) VALUES (
    #{courseId}, #{studentId}, #{courseName}, #{startDate}, #{endDate}
    )
  </insert>

  <!-- 受講生コース申し込み情報の新規登録 -->
  <insert id="registerStudentStatus" useGeneratedKeys="true" keyProperty="statusId">
    INSERT INTO courses_status (
    status_id, course_id, status
    ) VALUES (
    #{statusId}, #{courseId}, #{status}
    )
  </insert>

  <!-- 受講生の更新 -->
  <update id="updateStudent">
    UPDATE students
    SET
    student_name = #{studentName}, student_name_furigana = #{studentNameFurigana}, nickname = #{nickname},
    email = #{email}, address = #{address}, age = #{age}, gender = #{gender}, remark = #{remark},
    isDeleted = #{isDeleted}
    WHERE id = #{id}
  </update>

  <!-- 受講生コース情報の更新 -->
  <update id="updateStudentCourses">
    UPDATE students_courses
    SET course_name = #{courseName}
    WHERE course_id = #{courseId}
  </update>

  <!-- 受講生コース申し込み情報の更新 -->
  <update id="updateStudentStatus">
    UPDATE courses_status
    SET status = #{status}
    WHERE status_id = #{statusId}
  </update>

</mapper>